#jinja2:lstrip_blocks: True
---
global:
  resolve_timeout: 15m
{% if monitoring_slack_alerts | default(false) %}
  slack_api_url: "{{ monitoring_slack_webhook_url }}"
{% endif %}

{% if monitoring_email_alerts | default(true) %}
  smtp_require_tls: {{ monitoring_smtp_require_tls }}
  smtp_smarthost: "{{ monitoring_smtp_host }}:{{ monitoring_smtp_port }}"
  smtp_from: "{{ monitoring_smtp_from }}"
  {% if monitoring_smtp_login | default('') | length > 0 %}
  smtp_auth_username: "{{ monitoring_smtp_login }}"
  smtp_auth_identity: "{{ monitoring_smtp_login }}"
  {% endif %}
  {% if monitoring_smtp_pwd | default('') | length > 0 %}
  smtp_auth_password: "{{ monitoring_smtp_pwd }}"
  {% endif %}
{% endif %}

{% set receivers = [{'name': 'DevOps'}] %}
route:
  receiver: 'DevOps'
  group_by: ['...']
  group_interval: {{ monitoring_alerts_group_message_interval }}
  repeat_interval: {{ monitoring_alerts_repeat_message_interval }}
{% if monitoring_except_rules | default([]) | length > 0 or monitoring_swarm_services_enabled | default(true) %}
  routes:
  {% if monitoring_except_rules | default([]) | length > 0 %}
  {% for rule in monitoring_except_rules %}
  - receiver: "{{ rule.receiver | default('null') }}"
    matchers:
    {% for matcher in  rule.matchers %}
        - {{ matcher }}
    {% endfor %}
  {% endfor %}
  {% endif %}
  {% if monitoring_swarm_services_enabled %}{{ receivers.append({'name': 'Swarm', 'send_resolved': false}) }}
  - receiver: 'Swarm'
    matchers:
      - job="swarm_services"
  {% endif %}
{% endif %}

receivers:
- name: 'null'
{% for receiver in receivers %}

- name: "{{ receiver.name }}"
  {% if monitoring_slack_alerts | default(false) %}
  slack_configs:
  - channel: '#{{ monitoring_slack_channel }}'
    send_resolved: {{ receiver.send_resolved | default(monitoring_alerts_send_resolved) }}
    icon_url: https://avatars3.githubusercontent.com/u/3380462
    username: Monitoring
    http_config:
      authorization:
        type: 'Bearer'
        credentials: "{{ monitoring_slack_token }}"
    {% raw %}
    title: >-
        {% if .CommonLabels is defined %}
          [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .CommonLabels.alertname }} for {{ .CommonLabels.job }} on {{ .CommonLabels.instance }}
        {% else %}
          [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .CommonLabels.alertname }} for {{ .CommonLabels.job }} on {{ .CommonLabels.container_label_com_docker_swarm_service_name }}
        {% endif %}
        {{- if gt (len .CommonLabels) (len .GroupLabels) -}}
          {{" "}}(
          {{- with .CommonLabels.Remove .GroupLabels.Names }}
            {{- range $index, $label := .SortedPairs -}}
              {{ if $index }}, {{ end }}
              {{- $label.Name }}="{{ $label.Value -}}"
            {{- end }}
          {{- end -}}
          )
        {{- end }}
    text: |-
        {{ range .Alerts -}}
        *Alert:* {{ .Annotations.title }}{{ if .Labels.severity }} - `{{ .Labels.severity }}`{{ end }}
        *Description:* {{ .Annotations.description }}
        *Details:*
          {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
          {{ end }}
        {{ end }}
    {% endraw %}
  {% endif %}
  {% if monitoring_email_alerts | default(true) %}
  email_configs:
    {% for receiver_to in monitoring_note_receiver %}
    - to: "{{ receiver_to }}"
      send_resolved: {{ receiver.send_resolved | default(monitoring_alerts_send_resolved) }}
      headers:
        subject: {% raw %}'[{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ else }}:{{ .Alerts.Resolved | len }}{{ end }}] {{ .CommonAnnotations.summary }} '{% endraw %}
    {% endfor %}
  {% endif %}
{% endfor %}
